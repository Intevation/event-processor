{
    "TEST-Shadowserver-DNS-open-resolvers": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_dns-open-resolvers/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-DRONE-REPORT": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_botnet-drone-hadoop/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Microsoft-Sinkhole": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_microsoft-sinkhole/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-NTP-Monitor": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_ntp-monitor/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-Chargen": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-chargen/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-Elasticsearch": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-elasticsearch/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-IPMI": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-ipmi/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-MDNS": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-mdns/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-MS-SQL": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-ms-sql/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-Memcached": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-memcached/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-MongoDB": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-mongodb/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-NetBIOS": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-netbios/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-Portmapper": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-portmapper/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-Redis": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-redis/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-SNMP": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-snmp/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Open-SSDP": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_open-ssdp/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-SSL-FREAK": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_ssl-freak/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-SSL-POODLE": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_ssl-poodle/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "TEST-Shadowserver-Sinkhole-HTTP-Drone": {
        "description": "Collect data from files in a directory.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "Fileinput",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": 384000000,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/input_sinkhole-http-drone/",
            "postfix": ".csv",
            "rate_limit": 300
        }
    },
    "asn-lookup-expert": {
        "description": "ASN Lookup is the bot responsible to add ASN and BGP information from Route Views Project to the events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.asn_lookup.expert",
        "name": "ASN Lookup",
        "parameters": {
            "database": "/opt/intelmq/var/lib/bots/asn_lookup/ipasn.dat"
        }
    },
    "asn-lookup-expert-copy": {
        "description": "ASN Lookup is the bot responsible to add ASN and BGP information from Route Views Project to the events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.asn_lookup.expert",
        "name": "ASN Lookup",
        "parameters": {
            "database": "/opt/intelmq/var/lib/bots/asn_lookup/ipasn.dat"
        }
    },
    "cert-bund-contact-database-expert": {
        "description": "Retrieve CIDR contact information from a PostgreSQL database.",
        "group": "Expert",
        "module": "intelmq.bots.experts.certbund_contact.expert",
        "name": "CERT-bund Contact Database",
        "parameters": {
            "database": "contactdb",
            "host": "localhost",
            "password": "@intelmqdbpasswd@",
            "port": 5432,
            "sslmode": "require",
            "user": "@dbuser@"
        }
    },
    "deduplicator-expert": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert-group2": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert-opendns": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert-openmongodb": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert-opensnmp": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert-openssdp": {
        "description": "Deduplicator is the bot responsible to detect and remove deduplicated messages.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "ignore_keys": "raw,time.observation",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "filter-NOT-drop-empty-amplification": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"min_amplification\": (\"none\"|null|\"\")"
        }
    },
    "filter-NOT-drop-empty-port": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "source.port",
            "filter_regex": "",
            "filter_value": ""
        }
    },
    "filter-NOT-drop-empty-server": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"server\": (\"none\"|null|\"\")"
        }
    },
    "filter-NOT-drop-empty-sysdesc": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"sysdesc\": (\"none\"|null|\"\")"
        }
    },
    "filter-NOT-drop-empty-version": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"version\": (\"none\"|null|\"\")"
        }
    },
    "filter-NOT-drop-empty-visible-database": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"visible_databases\": (\"none\"|null|\"\")"
        }
    },
    "filter-NOT-drop-tornode": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "keep",
            "filter_key": "tor_node",
            "filter_regex": "",
            "filter_value": "True"
        }
    },
    "filter-drop-empty-amplification": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"min_amplification\": (\"none\"|null|\"\")"
        }
    },
    "filter-drop-empty-port": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "source.port",
            "filter_regex": "",
            "filter_value": ""
        }
    },
    "filter-drop-empty-server": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"server\": (\"none\"|null|\"\")"
        }
    },
    "filter-drop-empty-sysdesc": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"sysdesc\": (\"none\"|null|\"\")"
        }
    },
    "filter-drop-empty-version": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"version\": (\"none\"|null|\"\")"
        }
    },
    "filter-drop-empty-visible-database": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "extra",
            "filter_regex": "True",
            "filter_value": "\"visible_databases\": (\"none\"|null|\"\")"
        }
    },
    "filter-drop-tornode": {
        "description": "Filters out events depending on bot parameters specification (filter_key, filter_value, filter_action)",
        "group": "Expert",
        "module": "intelmq.bots.experts.filter.expert",
        "name": "Filter",
        "parameters": {
            "filter_action": "drop",
            "filter_key": "tor_node",
            "filter_regex": "",
            "filter_value": "True"
        }
    },
    "maxmind-geoip-expert": {
        "description": "MaxMind GeoIP is the bot responsible to add geolocation information to the events (Country, City, Longitude, Latitude, etc..)",
        "group": "Expert",
        "module": "intelmq.bots.experts.maxmind_geoip.expert",
        "name": "MaxMind GeoIP",
        "parameters": {
            "database": "/opt/intelmq/var/lib/bots/maxmind_geoip/GeoLite2-City.mmdb"
        }
    },
    "maxmind-geoip-expert-copy": {
        "description": "MaxMind GeoIP is the bot responsible to add geolocation information to the events (Country, City, Longitude, Latitude, etc..)",
        "group": "Expert",
        "module": "intelmq.bots.experts.maxmind_geoip.expert",
        "name": "MaxMind GeoIP",
        "parameters": {
            "database": "/opt/intelmq/var/lib/bots/maxmind_geoip/GeoLite2-City.mmdb"
        }
    },
    "modify-expert": {
        "description": "Modify bot can make nearly arbitrary changes to event's fields based on regex-rules on different values. See docs/Bots.md for some examples.",
        "group": "Expert",
        "module": "intelmq.bots.experts.modify.expert",
        "name": "Modify",
        "parameters": {
            "configuration_path": "/opt/intelmq/var/lib/bots/modify/modify.conf"
        }
    },
    "modify-expert-copy": {
        "description": "Modify bot can make nearly arbitrary changes to event's fields based on regex-rules on different values. See docs/Bots.md for some examples.",
        "group": "Expert",
        "module": "intelmq.bots.experts.modify.expert",
        "name": "Modify",
        "parameters": {
            "configuration_path": "/opt/intelmq/var/lib/bots/modify/modify.conf"
        }
    },
    "postgresql-output": {
        "description": "PostgreSQL is the bot responsible to send events to a PostgreSQL Database. When activating autocommit, transactions are not used: http://initd.org/psycopg/docs/connection.html#connection.autocommit",
        "group": "Output",
        "module": "intelmq.bots.outputs.postgresql.output",
        "name": "PostgreSQL",
        "parameters": {
            "autocommit": true,
            "database": "intelmq-events",
            "host": "localhost",
            "password": "@intelmqdbpasswd@",
            "port": 5432,
            "sslmode": "require",
            "table": "events",
            "user": "@dbuser@"
        }
    },
    "shadowserver-parser-botnet-drone-hadoop": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Botnet-Drone-Hadoop",
            "overwrite": true
        }
    },
    "shadowserver-parser-dns-open-resolvers": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "DNS-open-resolvers",
            "overwrite": true
        }
    },
    "shadowserver-parser-microsoft-sinkhole": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Microsoft-Sinkhole",
            "overwrite": true
        }
    },
    "shadowserver-parser-ntp-monitor": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "NTP-Monitor",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-chargen": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-Chargen",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-elasticsearch": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-Elasticsearch",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-ipmi": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-IPMI",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-mdns": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-mDNS",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-memcached": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-Memcached",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-mongodb": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-MongoDB",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-ms-sql": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-MSSQL",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-netbios": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-NetBIOS",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-portmapper": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-Portmapper",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-redis": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-Redis",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-snmp": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-SNMP",
            "overwrite": true
        }
    },
    "shadowserver-parser-open-ssdp": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Open-SSDP",
            "overwrite": true
        }
    },
    "shadowserver-parser-sinkhole-http-drone": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Sinkhole-HTTP-Drone",
            "overwrite": true
        }
    },
    "shadowserver-parser-ssl-freak": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Ssl-Freak-Scan",
            "overwrite": true
        }
    },
    "shadowserver-parser-ssl-poodle": {
        "description": "ShadowServer Parser is a bot capable of parsing shadowserver feeds, depending on configuration files",
        "group": "Parser",
        "module": "intelmq.bots.parsers.shadowserver.parser",
        "name": "ShadowServer",
        "parameters": {
            "feedcode": "",
            "feedname": "Ssl-Scan",
            "overwrite": true
        }
    },
    "taxonomy-expert": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {}
    },
    "taxonomy-expert-copy": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {}
    },
    "tor-nodes-expert": {
        "description": "Tor Nodes is the bot responsible to check if an IP is an Tor Exit Node.",
        "group": "Expert",
        "module": "intelmq.bots.experts.tor_nodes.expert",
        "name": "Tor Nodes",
        "parameters": {
            "database": "/opt/intelmq/var/lib/bots/tor_nodes/tor_nodes.dat"
        }
    }
}
